#include <stdio.h>
#include <stdlib.h>

// Node declaration for a linked list
struct songNode {
    char name[100];
    float rating;
    int downloads[5];
    struct songNode *next;
};

struct songNode* addSong(struct songNode *p);
void displayPopularSongs(struct songNode *p);

int main() {
    char command;
    struct songNode *songList = NULL;
    int exit_ = 0;

    while (!exit_) {
        printf("\n1. Add a song\n");
        printf("2. Display popular songs\n");
        printf("3. Exit\n");
        printf("Enter command: ");
        scanf(" %c", &command);

        switch (command) {
            case '1':
                songList = addSong(songList);
                break;
            case '2':
                displayPopularSongs(songList);
                break;
            case '3':
                exit_ = 1;

                break;
            default:
                printf("Unrecognized command.\n");
                break;
        }
    }
    free(songList);

    return 0;
}

struct songNode* addSong(struct songNode *p) {
    struct songNode *tmp = malloc(sizeof(struct songNode));
    if (tmp == NULL) {
        printf("Error allocating memory for the new song node.\n");
        exit(1);
    }

    printf("Please enter the name of the song: ");
    if(scanf("%s", tmp->name)!=1){
        printf("Invalid input for the song name.");
        free(tmp);
        return p;
    }

    printf("Please enter the overall rating: ");
    if(scanf("%f", &tmp->rating)!=1){
        printf("Invalid input for the rating.");
        free(tmp);
        return p;
    }



    printf("Enter the number of downloads in the last five months:\n");
    for (int i = 0; i < 5; i++) {
        if(scanf("%d", &tmp->downloads[i])!=1){
        printf("Invalid input for the downloads.");
        free(tmp);
        return p;}
    }

    tmp->next = p;

    return tmp;
}

void displayPopularSongs(struct songNode *p) {

    struct songNode *mostpopularsong=NULL;

    if (p == NULL) {
        printf("No songs in the list.\n");
        return;
    }

    int popular=0;
    printf("\nPopular Songs:\n");
    while (p != NULL) {
        int sum = 0;
        printf("Name: %s, Rating: %.2f, Downloads:\n", p->name, p->rating);
        for (int i = 0; i < 5; i++) {
            printf("Month %d: %d ", i + 1, p->downloads[i]);
            sum += p->downloads[i];
        }

        printf("\nTotal downloads for this song: %d\n\n", sum);

        if(sum>popular){
            popular=sum;
            mostpopularsong=p;
        }

        p = p->next;
    }

    if(mostpopularsong!=NULL)
        printf("Most popular song is %s with rating %.2f and total downloads %d",mostpopularsong->name,mostpopularsong->rating,popular);



}


